<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mvc.INoteDAO">


	<select id="receiveMsgList" resultType="com.test.mvc.NoteDTO">
		SELECT RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, SUBSTR(NOTE_CONTENT,0,30) AS NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		FROM
		(
		    SELECT ROWNUM RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		    FROM
		    (
		    SELECT NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, MT.MEMBER_ID AS RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		            FROM
		            (
		                SELECT NOTE_CODE, NOTE_SENDER_CODE , M.MEMBER_ID AS SENDER, NOTE_RECEIVER_CODE, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		                FROM NOTE N LEFT JOIN MEMBER M
		                ON N.NOTE_SENDER_CODE = M.MEMBER_CODE
		            ) T LEFT JOIN MEMBER MT
		            ON T.NOTE_RECEIVER_CODE = MT.MEMBER_CODE
		            WHERE NOTE_RECEIVER_CODE = #{memberCode} 
		            ORDER BY NOTE_SENTDATE DESC
		    ) RECEIVER
		    WHERE NOTE_RECEIVER_DELETE IS NULL
		)
		WHERE RNUM &gt;= #{start} AND RNUM &lt;= #{end} 
		
	</select>
	
	<select id="sendMsgList" resultType="com.test.mvc.NoteDTO">
		SELECT RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, SUBSTR(NOTE_CONTENT,0,30) AS NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		FROM
		(
		    SELECT ROWNUM RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		    FROM
		    (
		    SELECT NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, MT.MEMBER_ID AS RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		            FROM
		            (
		                SELECT NOTE_CODE, NOTE_SENDER_CODE , M.MEMBER_ID AS SENDER, NOTE_RECEIVER_CODE, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		                FROM NOTE N LEFT JOIN MEMBER M
		                ON N.NOTE_SENDER_CODE = M.MEMBER_CODE
		            ) T LEFT JOIN MEMBER MT
		            ON T.NOTE_RECEIVER_CODE = MT.MEMBER_CODE
		            WHERE NOTE_SENDER_CODE = #{memberCode} 
		            ORDER BY NOTE_SENTDATE DESC
		    ) SENDER
		    WHERE NOTE_SENDER_DELETE IS NULL
		)
		WHERE RNUM &gt;= #{start} AND RNUM &lt;= #{end} 
	</select>
	
	<select id="binMsgList" resultType="com.test.mvc.NoteDTO">
		SELECT RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, SUBSTR(NOTE_CONTENT,0,30) AS NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		FROM
		(
		    SELECT ROWNUM RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		    FROM
		    (
		    SELECT NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, MT.MEMBER_ID AS RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		            FROM
		            (
		                SELECT NOTE_CODE, NOTE_SENDER_CODE , M.MEMBER_ID AS SENDER, NOTE_RECEIVER_CODE, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		                FROM NOTE N LEFT JOIN MEMBER M
		                ON N.NOTE_SENDER_CODE = M.MEMBER_CODE
		            ) T LEFT JOIN MEMBER MT
		            ON T.NOTE_RECEIVER_CODE = MT.MEMBER_CODE
		            WHERE NOTE_RECEIVER_CODE = #{memberCode} 
		            ORDER BY NOTE_SENTDATE DESC
		    ) RECEIVER
		    WHERE NOTE_RECEIVER_DELETE IS NOT NULL AND NOTE_REAL_RECEIVER_DELETE IS NULL
		)
		WHERE RNUM &gt;= #{start} AND RNUM &lt;= #{end} 
		
	</select>
	
	
	<select id="getDetailContent" resultType="com.test.mvc.NoteDTO">
		SELECT *
		FROM
		(
		    SELECT ROWNUM RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, NOTE_CONTENT, NOTE_SENTDATE,  NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		    FROM
		    (
		    SELECT NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, MT.MEMBER_ID AS RECEIVER, NOTE_CONTENT, NOTE_SENTDATE,  NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		            FROM
		            (
		                SELECT NOTE_CODE, NOTE_SENDER_CODE , M.MEMBER_ID AS SENDER, NOTE_RECEIVER_CODE, NOTE_CONTENT, NOTE_SENTDATE,  NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		                FROM NOTE N LEFT JOIN MEMBER M
		                ON N.NOTE_SENDER_CODE = M.MEMBER_CODE
		            ) T LEFT JOIN MEMBER MT
		            ON T.NOTE_RECEIVER_CODE = MT.MEMBER_CODE
		             
		            ORDER BY NOTE_SENTDATE DESC
		    )
		)
		WHERE NOTE_CODE = #{noteCode}
	</select>
	
	

	
	<select id="noteSearchReceive" resultType="com.test.mvc.NoteDTO">
	
		SELECT RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, SUBSTR(NOTE_CONTENT,0,30) AS NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		FROM
		(
		    SELECT ROWNUM RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		    FROM
		    (
		    SELECT NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, MT.MEMBER_ID AS RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		            FROM
		            (
		                SELECT NOTE_CODE, NOTE_SENDER_CODE , M.MEMBER_ID AS SENDER, NOTE_RECEIVER_CODE, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		                FROM NOTE N LEFT JOIN MEMBER M
		                ON N.NOTE_SENDER_CODE = M.MEMBER_CODE
		            ) T LEFT JOIN MEMBER MT
		            ON T.NOTE_RECEIVER_CODE = MT.MEMBER_CODE
		            WHERE NOTE_RECEIVER_CODE = #{memberCode} AND ${searchType} like '%${searchValue}%'
		            ORDER BY NOTE_SENTDATE DESC
		    ) RECEIVER
		    WHERE NOTE_RECEIVER_DELETE IS NULL 
		)
		WHERE RNUM &gt;= #{start} AND RNUM &lt;= #{end} 
	</select>
	
	
	
	
	<select id="noteSearchSend" resultType="com.test.mvc.NoteDTO">
		SELECT RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, SUBSTR(NOTE_CONTENT,0,30) AS NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		FROM
		(
		    SELECT ROWNUM RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		    FROM
		    (
		    SELECT NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, MT.MEMBER_ID AS RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		            FROM
		            (
		                SELECT NOTE_CODE, NOTE_SENDER_CODE , M.MEMBER_ID AS SENDER, NOTE_RECEIVER_CODE, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		                FROM NOTE N LEFT JOIN MEMBER M
		                ON N.NOTE_SENDER_CODE = M.MEMBER_CODE
		            ) T LEFT JOIN MEMBER MT
		            ON T.NOTE_RECEIVER_CODE = MT.MEMBER_CODE
		            WHERE NOTE_SENDER_CODE = #{memberCode} 
		            ORDER BY NOTE_SENTDATE DESC
		    ) SENDER
		    WHERE NOTE_SENDER_DELETE IS NULL AND ${searchType} LIKE  '%${searchValue}%'
		)
		WHERE RNUM &gt;= #{start} AND RNUM &lt;= #{end} 
	</select>
	
	
	
	
	<select id="noteSearchBin" resultType="com.test.mvc.NoteDTO">
		SELECT RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, SUBSTR(NOTE_CONTENT,0,30) AS NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		FROM
		(
		    SELECT ROWNUM RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		    FROM
		    (
		    SELECT NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, MT.MEMBER_ID AS RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		            FROM
		            (
		                SELECT NOTE_CODE, NOTE_SENDER_CODE , M.MEMBER_ID AS SENDER, NOTE_RECEIVER_CODE, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		                FROM NOTE N LEFT JOIN MEMBER M
		                ON N.NOTE_SENDER_CODE = M.MEMBER_CODE
		            ) T LEFT JOIN MEMBER MT
		            ON T.NOTE_RECEIVER_CODE = MT.MEMBER_CODE
		            WHERE NOTE_RECEIVER_CODE = #{memberCode} 
		            ORDER BY NOTE_SENTDATE DESC
		    ) RECEIVER
		    WHERE NOTE_RECEIVER_DELETE IS NOT NULL AND NOTE_REAL_RECEIVER_DELETE IS NULL AND ${searchType} LIKE  '%${searchValue}%'
		)
		WHERE RNUM &gt;= #{start} AND RNUM &lt;= #{end} 
		
	</select>
	
	
	
	
	
	<select id="getDataCountReceiveSearch" resultType="java.lang.Integer">
	
	SELECT count(*)
	FROM
	(
	    SELECT ROWNUM RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
	    FROM
	    (
	    SELECT NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, MT.MEMBER_ID AS RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
	            FROM
	            (
	                SELECT NOTE_CODE, NOTE_SENDER_CODE , M.MEMBER_ID AS SENDER, NOTE_RECEIVER_CODE, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
	                FROM NOTE N LEFT JOIN MEMBER M
	                ON N.NOTE_SENDER_CODE = M.MEMBER_CODE
	            ) T LEFT JOIN MEMBER MT
	            ON T.NOTE_RECEIVER_CODE = MT.MEMBER_CODE
	            WHERE NOTE_RECEIVER_CODE = #{memberCode} AND ${searchType} LIKE  '%${searchValue}%'
	            ORDER BY NOTE_SENTDATE DESC
	    ) RECEIVER
	    WHERE NOTE_RECEIVER_DELETE IS NULL 
	)
	
	
	
	</select>
	<select id="getDataCountSendSearch" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM
		(
		    SELECT ROWNUM RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		    FROM
		    (
		    SELECT NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, MT.MEMBER_ID AS RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		            FROM
		            (
		                SELECT NOTE_CODE, NOTE_SENDER_CODE , M.MEMBER_ID AS SENDER, NOTE_RECEIVER_CODE, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		                FROM NOTE N LEFT JOIN MEMBER M
		                ON N.NOTE_SENDER_CODE = M.MEMBER_CODE
		            ) T LEFT JOIN MEMBER MT
		            ON T.NOTE_RECEIVER_CODE = MT.MEMBER_CODE
		            WHERE NOTE_SENDER_CODE = #{memberCode} 
		            ORDER BY NOTE_SENTDATE DESC
		    ) SENDER
		    WHERE NOTE_SENDER_DELETE IS NULL AND ${searchType} LIKE  '%${searchValue}%'
		)
	</select>
	
	<select id="getDataCountBinSearch" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM
		(
		    SELECT ROWNUM RNUM, NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		    FROM
		    (
		    SELECT NOTE_CODE,NOTE_SENDER_CODE , SENDER,  NOTE_RECEIVER_CODE, MT.MEMBER_ID AS RECEIVER, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		            FROM
		            (
		                SELECT NOTE_CODE, NOTE_SENDER_CODE , M.MEMBER_ID AS SENDER, NOTE_RECEIVER_CODE, NOTE_CONTENT, NOTE_SENTDATE, NOTE_REAL_RECEIVER_DELETE, NOTE_SENDER_DELETE, NOTE_RECEIVER_DELETE 
		                FROM NOTE N LEFT JOIN MEMBER M
		                ON N.NOTE_SENDER_CODE = M.MEMBER_CODE
		            ) T LEFT JOIN MEMBER MT
		            ON T.NOTE_RECEIVER_CODE = MT.MEMBER_CODE
		            WHERE NOTE_RECEIVER_CODE = #{memberCode} 
		            ORDER BY NOTE_SENTDATE DESC
		    ) RECEIVER
		    WHERE NOTE_RECEIVER_DELETE IS NOT NULL AND NOTE_REAL_RECEIVER_DELETE IS NULL AND ${searchType} LIKE  '%${searchValue}%'
		)
	</select>
		
	<select id="getDataCountReceive" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM NOTE
		WHERE  NOTE_RECEIVER_CODE = #{memberCode} AND NOTE_RECEIVER_DELETE IS NULL
	</select>
	<select id="getDataCountSend" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM NOTE
		WHERE  NOTE_SENDER_CODE = #{memberCode} AND NOTE_SENDER_DELETE IS NULL 
	</select>
	
	<select id="getDataCountBin" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM NOTE
		WHERE  NOTE_RECEIVER_CODE = #{memberCode} AND NOTE_RECEIVER_DELETE IS NOT NULL AND NOTE_REAL_RECEIVER_DELETE IS NULL 
	</select>
	
	
	
	
	
	
	
	
	<insert id="add">
		INSERT INTO NOTE(NOTE_CODE, NOTE_SENDER_CODE, NOTE_RECEIVER_CODE, NOTE_CONTENT
            ,NOTE_SENTDATE)
		VALUES('N' || NOTE_SEQ.NEXTVAL, #{note_sender_code}, #{note_receiver_code}, #{note_content}, SYSDATE)
	</insert>
	

	<update id="putIntoBin">
		UPDATE NOTE
		SET NOTE_RECEIVER_DELETE = SYSDATE
		WHERE NOTE_CODE = #{noteCode}
	</update>
	
	
	<update id="sentNotedelete">
		UPDATE NOTE
		SET NOTE_SENDER_DELETE = SYSDATE
		WHERE NOTE_CODE = #{noteCode}
	</update>
	
	<update id="putBackIntoReceive">
		UPDATE NOTE
		SET NOTE_RECEIVER_DELETE = NULL
		WHERE NOTE_CODE = #{noteCode}
	</update>
	
	
	<update id="realDeleteFromBin">
		UPDATE NOTE
		SET NOTE_REAL_RECEIVER_DELETE = SYSDATE
		WHERE NOTE_CODE = #{noteCode}
	</update>

</mapper>